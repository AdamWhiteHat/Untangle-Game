<!--
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 * 
 * Project:	Untangle
 * 
 * Author:	Aleksandar Dalemski, a_dalemski@yahoo.com
-->

<Window x:Class="Untangle.MainWindow"
        x:Name="Window"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:lex="http://wpflocalizeextension.codeplex.com"
        xmlns:v="clr-namespace:Untangle"
        xmlns:vm="clr-namespace:Untangle.ViewModels"
		xmlns:enum="clr-namespace:Untangle.Enums"
        Title="{Binding Title}"
		
        Height="720"
        Width="960"
		
        WindowStartupLocation="CenterScreen"
        MouseMove="Window_MouseMove"
        MouseUp="Window_MouseUp"
		PreviewMouseWheel="Window_PreviewMouseWheel"
		KeyUp="Window_KeyUp"
        Closing="Window_Closing"		
        lex:ResxLocalizationProvider.DefaultAssembly="Untangle"
        lex:ResxLocalizationProvider.DefaultDictionary="Resources.MainWindow" 
		Icon="/Resources/Untangle.ico"
		AllowsTransparency="True" 
		WindowStyle="None"
		WindowState="Maximized"  
		ResizeMode="NoResize" 
		BorderThickness="2"
		BorderBrush="LightGray"
	>
	<Window.Resources>
		<DrawingBrush x:Key="SquareLattice" Stretch="None" TileMode="Tile"
              Viewport="0,0 50,50" ViewportUnits="Absolute">
			<!-- ^^^^^^^^^^^ set the size of the tile-->
			<DrawingBrush.Drawing>
				<GeometryDrawing>
					<GeometryDrawing.Geometry>
						<!-- draw a single X -->
						<GeometryGroup>
							<RectangleGeometry Rect="0,0 50,50"/>
						</GeometryGroup>
					</GeometryDrawing.Geometry>
					<GeometryDrawing.Pen>
						<!-- set color and thickness of lines -->
						<Pen Thickness="1.5" Brush="Black" />
					</GeometryDrawing.Pen>
				</GeometryDrawing>
			</DrawingBrush.Drawing>
		</DrawingBrush>
	</Window.Resources>
	<Window.DataContext>
		<vm:MainViewModel />
	</Window.DataContext>
	<Window.CommandBindings>
		<CommandBinding Command="ApplicationCommands.New" Executed="NewGameCommand_Executed" />
		<CommandBinding Command="ApplicationCommands.Save" Executed="SaveGameCommand_Executed" />
		<CommandBinding Command="ApplicationCommands.Open" Executed="LoadGameCommand_Executed" />
		<CommandBinding Command="ApplicationCommands.Close" Executed="ExitCommand_Executed" />
		<CommandBinding Command="ApplicationCommands.Undo" Executed="UndoCommand_Executed" />
		<CommandBinding Command="ApplicationCommands.Redo" Executed="RedoCommand_Executed" />
		<CommandBinding Command="{x:Static vm:MainViewModel.AboutCommand}" Executed="AboutCommand_Executed" />
		<CommandBinding Command="{x:Static vm:MainViewModel.LanguageCommand}" Executed="LanguageCommand_Executed" />
	</Window.CommandBindings>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="125" />
			<ColumnDefinition Width="125" />
			<ColumnDefinition />
			<ColumnDefinition />
			<ColumnDefinition />
			<ColumnDefinition />
			<ColumnDefinition Width="Auto" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="32" />
			<RowDefinition Height="22" />
			<RowDefinition Height="Auto" />
			<RowDefinition />
		</Grid.RowDefinitions>

		<Border Grid.Row="0" Grid.ColumnSpan="7" BorderBrush="LightGray" BorderThickness="2" >
			<Canvas Background="CornflowerBlue"
					HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
					MouseLeftButtonDown="Canvas_MouseLeftButtonDown">


				<StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
					<Label x:Name="labelTitle" Content="{Binding Path=Title}" Canvas.Left="30"  />
				</StackPanel>

				<WrapPanel VerticalAlignment="Bottom" HorizontalAlignment="Right" Canvas.Right="5" Canvas.Top="2">

					<Button x:Name="btnMinimizeWindow"  Content="0"
							Width="25" Height="20" 
							FontFamily="Marlett"
							Click="btnMinimizeWindow_Click" />

					<Button x:Name="btnMaximizeWindow"  Content="2"
							Width="25" Height="20" 
							FontFamily="Marlett" 
							Click="btnMaximizeWindow_Click" />

					<Button x:Name="btnCloseWindow"  Content="r"
							Width="45" Height="20" 
							FontFamily="Marlett"
							Click="btnCloseWindow_Click" />

				</WrapPanel>

			</Canvas>
		</Border>


		<Menu Grid.Row="1"
              Grid.Column="0"
              Grid.ColumnSpan="7"
			
              IsMainMenu="True">
			<MenuItem x:Name="mi_File"
                      Header="{lex:Loc}">
				<MenuItem x:Name="mi_NewGame" 
                          Header="{lex:Loc}"
                          Command="ApplicationCommands.New" />
				<Separator />
				<MenuItem x:Name="mi_SaveGame"
                          Header="{lex:Loc}"
                          Command="ApplicationCommands.Save" />
				<MenuItem x:Name="mi_LoadGame"
                          Header="{lex:Loc}"
                          Command="ApplicationCommands.Open" />

				<Separator />
				<MenuItem x:Name="mi_Exit"
                          Header="{lex:Loc}"
                          Command="ApplicationCommands.Close" />
			</MenuItem>
			<MenuItem x:Name="mi_Edit"
					  Header="{lex:Loc}">
				<MenuItem x:Name="mi_LevelBuilder"
                          Header="Enter Level Editor"
                          Click="MenuCommand_LevelBuilder_Click" />
				<Separator />
				<MenuItem x:Name="mi_Undo"
						  Header="{lex:Loc}"
						  Command="ApplicationCommands.Undo" />
				<MenuItem x:Name="mi_Redo"
						  Header="{lex:Loc}"
						  Command="ApplicationCommands.Redo" />
				<Separator />
				<MenuItem x:Name="mi_ColorGraph" 
						  Header="Get Chromatic Numbers"
						  Click="ColorGraph_Click" />
				<MenuItem x:Name="mi_ColorByStartPositions"
						  Header="Mark Vertices In Start Position"
						  Click="mi_ColorByStartPositions_Click" />
				<Separator />
				<MenuItem x:Name="mi_AutoSolve" Header="Attempt Auto-Solve" Click="mi_AutoSolve_Click" />
				<MenuItem x:Name="mi_AttemptMoveVerticesToStartPositions"
						  Header="Attempt To Send Vertices To Start Pos W/O Crossings"
						  Click="mi_AttemptMoveVerticesToStartPositions_Click" />
				<MenuItem x:Name="mi_RandomizeVertices"
                          Header="Randomize Vertices' Locations"
                          Click="mi_RandomizeVertices_Click"
						  Visibility="Collapsed" />
			</MenuItem>
			<MenuItem x:Name="mi_Settings"
                      Header="{lex:Loc}">
				<MenuItem x:Name="mi_Language"
                          Header="{lex:Loc}"
                          ItemsSource="{Binding LanguageManager.Languages}">
					<MenuItem.ItemContainerStyle>
						<Style TargetType="MenuItem">
							<Setter Property="Header"
                                    Value="{Binding FriendlyName}" />
							<Setter Property="Command"
                                    Value="{x:Static vm:MainViewModel.LanguageCommand}" />
							<Setter Property="CommandParameter"
                                    Value="{Binding CultureName}" />
							<Setter Property="IsChecked"
                                    Value="{Binding IsSelected}" />
						</Style>
					</MenuItem.ItemContainerStyle>
				</MenuItem>
				<Separator />
				<MenuItem x:Name="mi_Transparent" 
						  Header="Transparent Dialog"
						  IsCheckable="true"
						  Click="mi_Transparent_Click"  />
				<MenuItem x:Name="mi_ShowGridLines" 
						  Header="Show Grid Lines"
						  IsCheckable="true"
						  Click="mi_ShowGridLines_Click"  />
				<Separator />
				<MenuItem x:Name="mi_DebugView"
                          Header="Debug View"
						  IsCheckable="true"
                          Click="mi_DebugView_Click"/>
			</MenuItem>
			<MenuItem x:Name="mi_Help"
                      Header="{lex:Loc}">
				<MenuItem x:Name="mi_About"
                          Header="{lex:Loc}"
                          Command="{x:Static vm:MainViewModel.AboutCommand}" />
			</MenuItem>
		</Menu>



		<StackPanel Grid.Row="2" Grid.Column="0">
			<WrapPanel HorizontalAlignment="Right">
				<TextBlock x:Name="tb_Vertices" Margin="3" Text="{lex:Loc}" />
				<TextBlock Margin="3,3,10,3" Text="{Binding Game.Level.GameGraph.VertexCount}" />
			</WrapPanel>
			<WrapPanel HorizontalAlignment="Right">
				<TextBlock x:Name="tb_Intersections" Margin="3" Text="{lex:Loc}" />
				<TextBlock Margin="3,3,10,3" Text="{Binding Game.Level.GameGraph.IntersectionCount}" />
			</WrapPanel>
			<WrapPanel HorizontalAlignment="Right">
				<TextBlock x:Name="tb_Moves" Margin="3" Text="{lex:Loc}" />
				<TextBlock Margin="3,3,10,3" Text="{Binding Game.Level.MoveCount}" />
			</WrapPanel>
		</StackPanel>

		<TextBlock x:Name="levelEditorInstructions" 
				   Grid.Row="2" Grid.Column="4" 
				   Grid.ColumnSpan="2" Margin="2" Padding="2">
			<Run Text="Ctrl + Left Click : Create/Remove Edge" />
			<LineBreak />
			<Run Text="Alt + Left Click  : Place Vertex" />
			<LineBreak />
			<Run Text="Alt + Right Click : Remove Vertex" />
			<LineBreak />
			<Run Text="Ctrl + Shift + Left Click: Send Vertex to Start Position" />
		</TextBlock>

		<StackPanel Grid.Row="2" Grid.Column="1">
			<WrapPanel HorizontalAlignment="Right">
				<TextBlock Margin="3" Text="Zoom scale:" />
				<TextBlock Margin="3,3,10,3" Text="{Binding ScaleZoom}" />
			</WrapPanel>
			<WrapPanel HorizontalAlignment="Right">
				<TextBlock Margin="3" Text="Transparency:" />
				<TextBlock DataContext="{Binding RelativeSource={RelativeSource AncestorType=Window}}" x:Name="textBlockOpacity" Margin="3,3,10,3" Text="{Binding Opacity,StringFormat={}{0:0.##}}" />
			</WrapPanel>
		</StackPanel>

		<Border Grid.Column="6" Grid.Row="2" Grid.RowSpan="2">
			<ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" >
				<TextBox x:Name="textBoxDebugInfo" Height="Auto" MaxWidth="270" Width="Auto" TextWrapping="Wrap" Text="" />
			</ScrollViewer>
		</Border>

		<Border x:Name="borderGameField" Margin="3"
				Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="6"
				BorderBrush="Transparent" BorderThickness="2">

			<Grid x:Name="gameboardGrid" Background="Transparent" >

				<ItemsControl x:Name="ic_GameField"
						  ItemsSource="{Binding Game.Level.GameObjects}">
					<ItemsControl.LayoutTransform>
						<ScaleTransform ScaleX="{Binding ScaleZoom}" ScaleY="{Binding ScaleZoom}" />
					</ItemsControl.LayoutTransform>
					<ItemsControl.Resources>
						<Style x:Key="vertexStyle"
                       TargetType="Ellipse">
							<Style.Triggers>
								<DataTrigger Binding="{Binding State}" Value="{x:Static enum:VertexState.Normal}">
									<Setter Property="Fill"  Value="{Binding Color}" />
								</DataTrigger>
								<DataTrigger Binding="{Binding State}" Value="{x:Static enum:VertexState.ConnectedToHighlighted}">
									<Setter Property="Fill"  Value="Red" />
								</DataTrigger>
								<DataTrigger Binding="{Binding State}" Value="{x:Static enum:VertexState.Dragged}">
									<Setter Property="Fill" Value="LightSlateGray" />
								</DataTrigger>
								<DataTrigger Binding="{Binding State}" Value="{x:Static enum:VertexState.UnderMouse}">
									<Setter Property="Fill" Value="Orange" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
						<Style x:Key="lineSegmentStyle"
                       TargetType="Line">
							<Style.Triggers>
								<DataTrigger Binding="{Binding State}" Value="{x:Static enum:LineSegmentState.Normal}">
									<Setter Property="Stroke" Value="Black" />
								</DataTrigger>
								<DataTrigger Binding="{Binding State}" Value="{x:Static enum:LineSegmentState.Intersected}">
									<Setter Property="Stroke"  Value="Firebrick" />
								</DataTrigger>
								<DataTrigger Binding="{Binding State}" Value="{x:Static enum:LineSegmentState.Highlighted}">
									<Setter Property="Stroke" Value="DarkGreen" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
						<DataTemplate DataType="{x:Type vm:Vertex}">
							<Ellipse Style="{StaticResource vertexStyle}"
                             Width="{Binding Size}"
                             Height="{Binding Size}"
                             Stroke="Transparent"
                             StrokeThickness="10"
                             MouseEnter="Vertex_MouseEnter"
                             MouseLeave="Vertex_MouseLeave"
                             MouseDown="Vertex_MouseDown">
								<Ellipse.RenderTransform>
									<TransformGroup>
										<TranslateTransform X="{Binding X}" Y="{Binding Y}" />
										<TranslateTransform X="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ItemsControl}, Converter={v:MultiplicationConverter}, ConverterParameter=0.5}"
                                                    Y="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=ItemsControl}, Converter={v:MultiplicationConverter}, ConverterParameter=0.5}" />
										<TranslateTransform X="{Binding Size, Converter={v:MultiplicationConverter}, ConverterParameter=-0.5}"
                                                    Y="{Binding Size, Converter={v:MultiplicationConverter}, ConverterParameter=-0.5}" />
									</TransformGroup>
								</Ellipse.RenderTransform>
							</Ellipse>
						</DataTemplate>
						<DataTemplate DataType="{x:Type vm:LineSegment}">
							<Line Style="{StaticResource lineSegmentStyle}"
                          StrokeThickness="1.5"
                          X1="{Binding Vertex1.X}"
                          Y1="{Binding Vertex1.Y}"
                          X2="{Binding Vertex2.X}"
                          Y2="{Binding Vertex2.Y}">
								<Line.RenderTransform>
									<TranslateTransform X="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ItemsControl}, Converter={v:MultiplicationConverter}, ConverterParameter=0.5}"
                                                Y="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=ItemsControl}, Converter={v:MultiplicationConverter}, ConverterParameter=0.5}" />
								</Line.RenderTransform>
							</Line>
						</DataTemplate>
					</ItemsControl.Resources>
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<Canvas x:Name="gameCanvas" />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
					<ItemsControl.ItemContainerStyle>
						<Style>
							<Setter Property="Panel.ZIndex"
                            Value="{Binding ZIndex}" />
						</Style>
					</ItemsControl.ItemContainerStyle>
				</ItemsControl>

			</Grid>

		</Border>
	</Grid>
</Window>