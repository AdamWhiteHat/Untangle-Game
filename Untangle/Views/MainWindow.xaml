<!--
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 * 
 * Project:	Untangle
 * 
 * Author:	Aleksandar Dalemski, a_dalemski@yahoo.com
-->

<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:lex="http://wpflocalizeextension.codeplex.com"
        xmlns:v="clr-namespace:Untangle"
        xmlns:u="clr-namespace:Untangle.Utils"
        xmlns:vm="clr-namespace:Untangle.Core"
		xmlns:enum="clr-namespace:Untangle.Enums"
        
        xmlns:av="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="av" x:Class="Untangle.MainWindow"
        x:Name="Window"
        
        Title="{Binding Title}"
		
        Height="720"
        Width="960"
		
        WindowStartupLocation="CenterScreen"
        MouseMove="Window_MouseMove"
        MouseUp="Window_MouseUp"
		PreviewMouseWheel="Window_PreviewMouseWheel"
		KeyUp="Window_KeyUp"
        Closing="Window_Closing"		
        lex:ResxLocalizationProvider.DefaultAssembly="Untangle"
        lex:ResxLocalizationProvider.DefaultDictionary="Resources.MainWindow" 
		Icon="..\Resources\Untangle.ico"
		AllowsTransparency="True" 
        
        UseLayoutRounding="True"
        
        WindowStyle="None"        
		WindowState="Maximized"  
		ResizeMode="CanResizeWithGrip"
        BorderThickness="1"
		BorderBrush="{DynamicResource windowBorderColor}"        
	>

    <Window.Resources>
        <ResourceDictionary>
            <DrawingBrush x:Key="SquareLattice" Stretch="None" TileMode="Tile"
              Viewport="0,0 50,50" ViewportUnits="Absolute">
                <!-- ^^^^^^^^^^^ set the size of the tile-->
                <DrawingBrush.Drawing>
                    <GeometryDrawing>
                        <GeometryDrawing.Geometry>
                            <!-- draw a single X -->
                            <GeometryGroup>
                                <RectangleGeometry Rect="0,0 50,50"/>
                            </GeometryGroup>
                        </GeometryDrawing.Geometry>
                        <GeometryDrawing.Pen>
                            <!-- set color and thickness of lines -->
                            <Pen Thickness="0.5" Brush="Black" />
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>
                </DrawingBrush.Drawing>
            </DrawingBrush>
        </ResourceDictionary>
    </Window.Resources>

    <Window.DataContext>
        <vm:MainViewModel />
    </Window.DataContext>

    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.New" Executed="NewGameCommand_Executed" />
        <CommandBinding Command="ApplicationCommands.Save" Executed="SaveGameCommand_Executed" />
        <CommandBinding Command="ApplicationCommands.Open" Executed="LoadGameCommand_Executed" />
        <CommandBinding Command="ApplicationCommands.Close" Executed="ExitCommand_Executed" />
        <CommandBinding Command="ApplicationCommands.Undo" Executed="UndoCommand_Executed" />
        <CommandBinding Command="ApplicationCommands.Redo" Executed="RedoCommand_Executed" />
        <CommandBinding Command="{x:Static v:MainWindow.AboutCommand}" Executed="AboutCommand_Executed" />
        <CommandBinding Command="{x:Static v:MainWindow.LanguageCommand}" Executed="LanguageCommand_Executed" />
    </Window.CommandBindings>

    <Grid x:Name="gridWindow">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="27" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Border Grid.Row="0" BorderBrush="{DynamicResource windowBorderColor}" BorderThickness="0.5" >
            <Grid   Background="{DynamicResource windowTitlebarColor}"
					HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
					MouseLeftButtonDown="Canvas_MouseLeftButtonDown">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="26" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>


                <Image Grid.Column="0" x:Name="imageIcon" VerticalAlignment="Center"             
                       Width="16" Height="16" Margin="5"
                       WindowChrome.IsHitTestVisibleInChrome="True" Source="/Views/Untangle.ico" />

                <Label Grid.Column="1" x:Name="labelTitle" Content="{Binding Title}"  VerticalAlignment="Center" HorizontalAlignment="Left" />

                <WrapPanel Grid.Column="2" Margin="1">

                    <Button x:Name="btnMinimizeWindow" 
                            Content="0"
							Width="25" Height="23" Padding="0"
							FontFamily="Marlett" FontSize="15"
							Click="btnMinimizeWindow_Click" />

                    <Button x:Name="btnMaximizeWindow"
                            Content="2"
							Width="25" Height="23" Padding="0"
							FontFamily="Marlett" FontSize="15"
							Click="btnMaximizeWindow_Click" />

                    <Button x:Name="btnCloseWindow"
                            Content="⨉"
							Width="30" Height="23" Padding="0"
			                FontSize="15"
							Click="btnCloseWindow_Click" />

                </WrapPanel>

            </Grid>
        </Border>

        <Border Grid.Row="1" BorderBrush="DarkSlateGray" BorderThickness="0,0,0,0.5"  >
            <Menu  IsMainMenu="True" Background="{DynamicResource windowControlColor}" Padding="2,2,0,3">
                <MenuItem x:Name="mi_File"
                            Header="{lex:Loc}">
                    <MenuItem x:Name="mi_NewGame" 
                                Header="{lex:Loc}"
                                Command="ApplicationCommands.New" />
                    <Separator />
                    <MenuItem x:Name="mi_SaveGame"
                                Header="{lex:Loc}"
                                Command="ApplicationCommands.Save" >
                        <MenuItem.ItemsPanel>
                            <ItemsPanelTemplate/>
                        </MenuItem.ItemsPanel>
                    </MenuItem>
                    <MenuItem x:Name="mi_LoadGame"
                                Header="{lex:Loc}"
                                Command="ApplicationCommands.Open" />
                    <Separator />
                    <MenuItem x:Name="mi_Exit"
                                Header="{lex:Loc}"
                                Command="ApplicationCommands.Close" />
                </MenuItem>
                <MenuItem x:Name="mi_Edit" Header="{lex:Loc}">
                    <MenuItem x:Name="mi_LevelBuilder"
                                Header="Enter Level Editor"
                                Click="MenuCommand_LevelBuilder_Click" />
                    <Separator />
                    <MenuItem x:Name="mi_Undo"
				                Header="{lex:Loc}"
				                Command="ApplicationCommands.Undo" />
                    <MenuItem x:Name="mi_Redo"
				                Header="{lex:Loc}"
				                Command="ApplicationCommands.Redo" />
                    <Separator />
                    <MenuItem x:Name="mi_ColorGraph" 
				                Header="Get Chromatic Numbers"
				                Click="ColorGraph_Click" />
                    <Separator />
                    <MenuItem x:Name="mi_AutoSolve" Header="Auto-Solve" Click="mi_AutoSolve_Click" />
                    <MenuItem x:Name="mi_SetVerticesSolvedPosition"
                                Header="Set Vertices SOLVED Position"
                                Click="mi_SetVerticesSolvePositions_Click" />
                    <Separator />
                    <MenuItem x:Name="mi_SendVerticesToStartPositions"
				                Header="Send To Start"
                                Click="mi_SendVerticesToStartPositions_Click" />
                    <MenuItem x:Name="mi_ColorByStartPositions"
				                Header="Mark Vertices In START Position"
				                Click="mi_ColorByStartPositions_Click" />

                    <Separator />
                    <MenuItem x:Name="mi_RandomizeVertices"
                                Header="Randomize Vertices' Locations"
                                Click="mi_RandomizeVertices_Click"
				                Visibility="Collapsed" />
                    <MenuItem x:Name="mi_ReScaleVertices"
                                Header="Re-Scale All Vertices To Current Zoom Level"
                                Click="mi_ReScaleVertices_Click"
                                Visibility="Collapsed" />
                    <MenuItem x:Name="mi_RecenterAllVertices"
                                Header="Re-center All Vertices"
                                Click="mi_RecenterAllVertices_Click"
                                Visibility="Collapsed" />
                </MenuItem>
                <MenuItem x:Name="mi_Settings"
                            Header="{lex:Loc}">
                    <MenuItem x:Name="mi_Language"
                                Header="{lex:Loc}"
                                ItemsSource="{Binding LanguageManager.Languages}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Header"
                                        Value="{Binding FriendlyName}" />
                                <Setter Property="Command"
                                        Value="{x:Static v:MainWindow.LanguageCommand}" />
                                <Setter Property="CommandParameter"
                               Value="{Binding CultureName}" />
                                <Setter Property="IsChecked"
                               Value="{Binding IsSelected}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                    <Separator />
                    <MenuItem x:Name="mi_Transparent" 
				  Header="Transparent Dialog"
				  IsCheckable="true"
				  Click="mi_Transparent_Click"  />
                    <MenuItem x:Name="mi_ShowGridLines" 
				  Header="Show Grid Lines"
				  IsCheckable="true"
				  Click="mi_ShowGridLines_Click"  />
                    <Separator />
                    <MenuItem x:Name="mi_DebugView"
                     Header="Debug View"
				  IsCheckable="true"
                     Click="mi_DebugView_Click"/>
                </MenuItem>
                <MenuItem x:Name="mi_Help"
                 Header="{lex:Loc}">
                    <MenuItem x:Name="mi_About"
                     Header="{lex:Loc}"
                     Command="{x:Static v:MainWindow.AboutCommand}" />
                </MenuItem>
            </Menu>
        </Border>

        <Grid Grid.Row="2" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="125" />
                <ColumnDefinition Width="125" />
                <ColumnDefinition Width="61*" />

                <ColumnDefinition Width="14*" />
                <ColumnDefinition Width="47*"/>
                <ColumnDefinition Width="61*" />

                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="6" BorderBrush="{DynamicResource windowBorderColor}" BorderThickness="1" >
                <Grid Background="{DynamicResource windowControlColor}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="250" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50" />
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0" Grid.Column="0" Margin="10,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Border Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="0" BorderThickness="0,0,0,1">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="0.5,0.5" SpreadMethod="Reflect" >
                                    <GradientStop Color="#00000000" />
                                    <GradientStop Color="Black" Offset="1"/>
                                    <GradientStop Color="#26000000" Offset="0.15"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <TextBlock  x:Name="tb_ScoreBoard" Text="{lex:Loc}" HorizontalAlignment="Center" />
                        </Border>

                        <TextBlock Grid.Column="0"  Grid.Row="1" x:Name="tb_BestMoves" Text="{lex:Loc}" HorizontalAlignment="Right" />
                        <TextBlock  Grid.Column="1" Grid.Row="1" Text="{Binding BestScore.MoveCount, Mode=OneWay}" Padding="7,0" />

                        <TextBlock Grid.Column="0"  Grid.Row="2" x:Name="tb_BestTime" Text="{lex:Loc}" HorizontalAlignment="Right" />
                        <TextBlock  Grid.Column="1" Grid.Row="2" Text="{Binding BestScore.SolveTime, StringFormat=\{0:D\} seconds, Mode=OneWay}" Padding="7,0" />


                        <TextBlock  Grid.Column="2" Grid.Row="1" x:Name="tb_Moves" Text="{lex:Loc}" HorizontalAlignment="Right" />
                        <TextBlock  Grid.Column="3" Grid.Row="1" Text="{Binding Game.MoveCount, Mode=OneWay}" Padding="7,0" />

                        <TextBlock  Grid.Column="2" Grid.Row="2" x:Name="tb_Time" Text="{lex:Loc}" HorizontalAlignment="Right" />
                        <TextBlock  Grid.Column="3" Grid.Row="2" Text="{Binding Game.SecondsElapsed, StringFormat=\{0:D\} seconds}" Padding="7,0" />

                    </Grid >

                    <Grid  Grid.Row="0" Grid.Column="1"  x:Name="levelEditorInstructions"
                           HorizontalAlignment="Center" VerticalAlignment="Center" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Grid Grid.Column="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0" Grid.Column="0" FontWeight="Bold" HorizontalAlignment="Right" Text="Ctrl + Left Click:" />
                            <TextBlock Grid.Row="0" Grid.Column="1"  Padding="7,0" Text="Create/Remove Edge" />

                            <TextBlock Grid.Row="1" Grid.Column="0" FontWeight="Bold" HorizontalAlignment="Right" Text="Alt + Left Click:" />
                            <TextBlock  Grid.Row="1" Grid.Column="1" Padding="7,0" Text="Place Vertex" />

                            <TextBlock Grid.Row="2" Grid.Column="0" FontWeight="Bold" HorizontalAlignment="Right" Text="Ctrl + Shift + Left Click:" />
                            <TextBlock Grid.Row="2" Grid.Column="1" Padding="7,0" Text="Send Vertex to Start Position" />

                        </Grid>
                        <Grid Grid.Column="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="1" Grid.Column="0" FontWeight="Bold" HorizontalAlignment="Right" Text="Alt + Right Click:" />
                            <TextBlock Grid.Row="1" Grid.Column="1" Padding="7,0" Text="Remove Vertex" />

                            <TextBlock Grid.Row="2" Grid.Column="0" FontWeight="Bold" HorizontalAlignment="Right" Text="Alt + Shift + Left Click:" />
                            <TextBlock Grid.Row="2" Grid.Column="1" Padding="7,0" Text="Send Vertex to Solve Position" />

                        </Grid>

                    </Grid>
                </Grid>
            </Border>
            <Grid x:Name="debugView" Grid.Row="0" Grid.RowSpan="2" Grid.Column="6"
                  Width="0"
                  Background="{DynamicResource windowControlColor}">

                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" >
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <ListBox x:Name="lbUndoListBox" Grid.Row="0"
                                 MinHeight="150" Height="Auto" Width="Auto"
                                 HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                                 Margin="4" 
                                 ScrollViewer.VerticalScrollBarVisibility="Auto"                                 
                                 ItemsSource="{Binding Game.UndoStack}" SelectionMode="Extended"
                                 />

                        <ListBox x:Name="lbRedoListBox" Grid.Row="1"
                                 MinHeight="150" Height="Auto" Width="Auto" 
                                 HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                                 Margin="4" 
                                 ScrollViewer.VerticalScrollBarVisibility="Auto"      
                                  ItemsSource="{Binding Game.RedoStack}" SelectionMode="Extended"
                                 />

                        <TextBox x:Name="textBoxDebugInfo" Grid.Row="2"
                                 MinHeight="150" Height="Auto" Width="Auto"
                                 HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                                 Margin="4" 
                                 ScrollViewer.VerticalScrollBarVisibility="Auto"      
                                 TextWrapping="Wrap" 
                                 Text=""
                                 IsUndoEnabled="False" />
                    </Grid>
                </ScrollViewer>
            </Grid>

            <Border x:Name="borderGameField" Margin="0" Padding="0"
				Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="6"   	
				BorderBrush="Black" BorderThickness="0.5">

                <Grid x:Name="gameboardGrid" Background="Transparent">

                    <ItemsControl x:Name="ic_GameField" ItemsSource="{Binding Game.GameObjects}"  >

                        <ItemsControl.Resources>
                            <Style x:Key="vertexStyle"
						           TargetType="{x:Type Ellipse}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding State}" Value="{x:Static enum:VertexState.Normal}">
                                        <Setter Property="Fill"  Value="{Binding Color}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding State}" Value="{x:Static enum:VertexState.ConnectedToHighlighted}">
                                        <Setter Property="Fill"  Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding State}" Value="{x:Static enum:VertexState.Dragged}">
                                        <Setter Property="Fill" Value="LightSlateGray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding State}" Value="{x:Static enum:VertexState.UnderMouse}">
                                        <Setter Property="Fill" Value="Orange" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style x:Key="lineSegmentStyle"
						           TargetType="{x:Type Line}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding State}" Value="{x:Static enum:LineSegmentState.Normal}">
                                        <Setter Property="Stroke" Value="{DynamicResource LineSegmentNormalColor}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding State}" Value="{x:Static enum:LineSegmentState.Intersected}">
                                        <Setter Property="Stroke"  Value="{DynamicResource LineSegmentIntersectedColor}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding State}" Value="{x:Static enum:LineSegmentState.Highlighted}">
                                        <Setter Property="Stroke" Value="{DynamicResource LineSegmentHighlightedColor}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <DataTemplate DataType="{x:Type vm:Vertex}">
                                <Ellipse Style="{StaticResource vertexStyle}"
										 Width="{Binding Size, Mode=OneWay}"
										 Height="{Binding Size, Mode=OneWay}"                                                                                  
                                         Stroke="Transparent"                                         
                                         MouseEnter="Vertex_MouseEnter"
										 MouseLeave="Vertex_MouseLeave"
										 MouseDown="Vertex_MouseDown"                                         
                                         >
                                    <Ellipse.RenderTransform>
                                        <TransformGroup>
                                            <TranslateTransform X="{Binding X, Mode=TwoWay}" 
                                                                Y="{Binding Y, Mode=TwoWay}" />
                                            <TranslateTransform X="{Binding ActualWidth, ConverterParameter=0.5, Converter={u:MultiplicationConverter}, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
									                            Y="{Binding ActualHeight, ConverterParameter=0.5, Converter={u:MultiplicationConverter}, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                                            <TranslateTransform X="{Binding Size, ConverterParameter=-0.5, Converter={u:MultiplicationConverter}}"
									                            Y="{Binding Size, ConverterParameter=-0.5, Converter={u:MultiplicationConverter}}" />
                                        </TransformGroup>
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type vm:LineSegment}">
                                <Line Style="{StaticResource lineSegmentStyle}" 
										StrokeThickness="1.5"
										X1="{Binding Vertex1.X}"
										Y1="{Binding Vertex1.Y}"
										X2="{Binding Vertex2.X}"
										Y2="{Binding Vertex2.Y}">
                                    <Line.RenderTransform>
                                        <TranslateTransform
                                                            X="{Binding ActualWidth, ConverterParameter=0.5, Converter={u:MultiplicationConverter}, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
												            Y="{Binding ActualHeight, ConverterParameter=0.5, Converter={u:MultiplicationConverter}, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                                    </Line.RenderTransform>
                                </Line>
                            </DataTemplate>
                        </ItemsControl.Resources>


                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas x:Name="gameCanvas" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.RenderTransform>
                            <ScaleTransform ScaleX="{Binding ScaleZoom}" ScaleY="{Binding ScaleZoom}"
                                            CenterX="{Binding GameBoardCenter.X}"
                                            CenterY="{Binding GameBoardCenter.Y}"
                                            />
                        </ItemsControl.RenderTransform>


                        <ItemsControl.ItemContainerStyle>
                            <Style>
                                <Setter Property="Panel.ZIndex"
							            Value="{Binding ZIndex, Mode=OneWay}" />
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                    </ItemsControl>

                </Grid>

            </Border>

            <StatusBar x:Name="statusBar" Grid.Row="2" Grid.ColumnSpan="6" Height="27" Foreground="Black">

                <Grid HorizontalAlignment="Stretch" Width="{Binding ActualWidth, ElementName=statusBar, Mode=OneWay}" Height="{Binding ActualHeight, ElementName=statusBar, Mode=OneWay}" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <StatusBarItem Grid.Column="0" />

                    <WrapPanel Grid.Column="1" Orientation="Horizontal">
                        <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="10,0" />

                        <TextBlock x:Name="tb_Vertices" Text="{lex:Loc}" />
                        <TextBlock Text="{Binding Game.Graph.VertexCount, Mode=OneWay}" TextAlignment="Center" MinWidth="23" />

                        <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="10,0" />

                        <TextBlock x:Name="tb_Intersections" Text="{lex:Loc}" />
                        <TextBlock Text="{Binding Game.Graph.IntersectionCount, Mode=OneWay}" TextAlignment="Center" MinWidth="23" />

                        <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="10,0" />

                        <TextBlock x:Name="tb_Zoom" Text="{lex:Loc}" />
                        <TextBlock Text="{Binding ScaleZoom, Mode=OneWay}" TextAlignment="Center" MinWidth="27" />

                        <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="10,0" />

                        <TextBlock x:Name="tb_Opacity" Text="{lex:Loc}" />
                        <TextBlock DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Text="{Binding Opacity, StringFormat=\{0:0.##\}, Mode=OneWay}" TextAlignment="Center" MinWidth="23" />

                        <Separator Margin="10,0" />

                    </WrapPanel>

                </Grid>

            </StatusBar>

        </Grid>
    </Grid>
</Window>